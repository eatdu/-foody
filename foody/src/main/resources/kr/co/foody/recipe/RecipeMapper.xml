<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.foody.recipe.RecipeMapper">

	<insert id="insert" parameterType="kr.co.foody.recipe.RecipeVO">
		INSERT INTO recipe (
			name, intro, type, time, tip, serving, regdate
		) VALUES (
			#{name}, #{intro}, #{type}, #{time}, #{tip}, #{serving}, NOW()
		)
	</insert>
	
	<!-- 레시피no로 해당 레시피에 필요한 재료 리스트 조회하는 sql -->
	<select id='selectIngreList' parameterType="int" resultType="kr.co.foody.recipe.IngredientVO">
		SELECT
			map.no, map.quantity, map.weight, name, carbo, protein, fat, large_cate, print
		FROM
			ingre, (
			SELECT ingredient_no AS no, quantity, weight
			FROM ingre_recipe_map 
			WHERE recipe_no = #{no}
			) map
		WHERE
			ingre.no = map.no;
	</select>
	
	<!-- 레시피no로 해당 레시피 조리과정 리스트로 조회하는 sql -->
	<select id='selectProcessList' parameterType="int">
		
	</select>
	
	<!-- 조건없이 전체 조회 -->
	<select id="selectAll" resultType="kr.co.foody.recipe.RecipeVO">
		SELECT a.*
		FROM (
			SELECT @ROWNUM := @ROWNUM + 1 AS rownum, recipe.* 
			FROM recipe, (select @rownum := 0) b
			) a
		<!-- 페이징 처리
		WHERE
			rownum between #{startNo} and #{endNo}
		 -->
	</select>
	
	<!-- 재료 검색어로 ingre_no 리스트 가져오기 -->
	<select id='selectIngreNo' parameterType="string" resultType="int">
		SELECT no FROM ingre 
		WHERE name REGEXP ${str}
			OR detail REGEXP ${str}
	</select>
	
	<!-- 주어진 조건에서 갯수 카운트 -->
	<select id='countWithFilter' parameterType="map" resultType="int">
		SELECT count(*)
		FROM recipe, (
			SELECT a.rcpno
			<if test='allergyArr != null'>
				, sum(algF) algCnt
			</if>
			<if test='keywordArr != null'>
	        	, sum(keyF) keyCnt
	        </if>
	        <if test='ingreCateArr != null'>
	        	, sum(icateF) icateCnt
	        </if>
			FROM (
				SELECT map.recipe_no rcpno
				<if test='allergyArr != null'>
	 				, (ingre.allergy_no IN (
	 			<foreach collection="allergyArr" item="no" separator=",">
	 				#{no}
	 			</foreach>
	 				)) algF
	 			</if>
	 			<if test='keywordArr != null'>
	 				, (ingre.no IN (
	 			<foreach collection="keywordArr" item="no" separator=",">
	 				#{no}
	 			</foreach>
	 				)) keyF
	 			</if>
	 			<if test='ingreCateArr != null'>
	 				, (ingre.large_cate IN (
	 			<foreach collection="ingreCateArr" item="no" separator=",">
	 				#{no}
	 			</foreach>
	 				)) icateF
	 			</if>
				FROM ingre_recipe_map map, ingre
				WHERE ingre.no = map.ingredient_no
				) a
			GROUP BY rcpno
			) b
		WHERE b.rcpno = recipe.no
		<if test='rcpCateArr != null'>
			AND recipe.type IN (
		<foreach collection="rcpCateArr" item="no" separator=",">
			#{no}
		</foreach>
			)
		</if>
	    <if test='allergyArr != null'>
		    AND algCnt = 0
	    </if>
	    <if test='keywordArr != null'>
		    AND keyCnt > 0
	    </if>
	    <if test='ingreCateArr != null'>
		    AND icateCnt > 0
		</if>
	</select>
	
	<!-- 0. 재료 단어, 재료 분류, 음식 분류, 알러지 필터 모두 적용 -->
	<select id='selectWithFilter' parameterType="map" resultType="kr.co.foody.recipe.RecipeVO">
		SELECT *
		FROM (
			SELECT @ROWNUM := @ROWNUM + 1 AS rownum, recipe.*
			FROM recipe, (select @rownum := 0) r, (
				SELECT a.rcpno
				<if test='allergyArr != null'>
					, sum(algF) algCnt
				</if>
				<if test='keywordArr != null'>
		        	, sum(keyF) keyCnt
		        </if>
		        <if test='ingreCateArr != null'>
		        	, sum(icateF) icateCnt
		        </if>
				FROM (
					SELECT map.recipe_no rcpno
					<if test='allergyArr != null'>
		 				, (ingre.allergy_no IN (
		 			<foreach collection="allergyArr" item="no" separator=",">
		 				#{no}
		 			</foreach>
		 				)) algF
		 			</if>
		 			<if test='keywordArr != null'>
		 				, (ingre.no IN (
		 			<foreach collection="keywordArr" item="no" separator=",">
		 				#{no}
		 			</foreach>
		 				)) keyF
		 			</if>
		 			<if test='ingreCateArr != null'>
		 				, (ingre.large_cate IN (
		 			<foreach collection="ingreCateArr" item="no" separator=",">
		 				#{no}
		 			</foreach>
		 				)) icateF
		 			</if>
					FROM ingre_recipe_map map, ingre
					WHERE ingre.no = map.ingredient_no
					) a
				GROUP BY rcpno
				) b
			WHERE b.rcpno = recipe.no
			<if test='rcpCateArr != null'>
				AND recipe.type IN (
			<foreach collection="rcpCateArr" item="no" separator=",">
				#{no}
			</foreach>
				)
			</if>
		    <if test='allergyArr != null'>
			    AND algCnt = 0
		    </if>
		    <if test='keywordArr != null'>
			    AND keyCnt > 0
		    </if>
		    <if test='ingreCateArr != null'>
			    AND icateCnt > 0
			</if>
			ORDER BY regdate DESC
			) result
		WHERE rownum BETWEEN #{startRno} AND #{endRno}
		ORDER BY rownum
	</select>
	
	<!-- 1. 재료분류, 키워드중 한가지 조건이 걸린 경우 + (재료분류 or 재료키워드), 요리분류 -->
	<select id='selectIngreOrKey' parameterType="map" resultType="kr.co.foody.recipe.RecipeVO">
		SELECT
			*
		FROM
			recipe, (
			SELECT
				map.recipe_no no, count(*) cnt, sum(algchk) algCnt
			FROM
				ingre_recipe_map map, (
					SELECT
						name, no ingre_no, 
						<if test='allergyArr != null'>
			 				(allergy_no IN (
			 			<foreach collection="allergyArr" item="no" separator=",">
			 				#{no}
			 			</foreach>
			 				)) algchk,
			 			</if>
						large_cate
					FROM
						ingre
		 			<where>
			 			<if test='keywordArr != null'>
			 				name IN (
			 			<foreach collection="keywordArr" item="name" separator=",">
			 				#{name}
			 			</foreach>
			 				)
			 			</if>
			 			<if test='ingreCateArr != null'>
			 				AND large_cate IN (
			 			<foreach collection="ingreCateArr" item="no" separator=",">
			 				#{no}
			 			</foreach>
			 				)
			 			</if>
			 			<if test='allergyArr != null'>
			 				OR allergy_no IN (
			 			<foreach collection="allergyArr" item="no" separator=",">
			 				#{no}
			 			</foreach>
			 				)
			 			</if>
		 			</where>
				) result
			WHERE
				result.ingre_no = map.ingredient_no
			GROUP BY
				map.recipe_no
			) li
		WHERE recipe.no = li.no
		<if test='rcpCateArr != null'>
			AND type IN (
		<foreach collection="rcpCateArr" item="no" separator=",">
			#{no}
		</foreach>
			)
		</if>
		<if test='allergyArr != null'>
			AND li.algCnt = 0
		</if>
		ORDER BY cnt DESC
	</select>
	
	<!-- 2. 요리분류 조건이 걸린 경우 -->
	<select id="selectR" parameterType="map" resultType="kr.co.foody.recipe.RecipeVO">
		SELECT * FROM recipe
		WHERE type IN (
			<foreach collection="rcpCateArr" item="no" separator=",">
				#{no}
			</foreach>
				)
	</select> 
	
	<!--  3. 추천 레시피 - 알러지 필터, 선호 음식 분류 -->
	
	<!-- 재료 검색어로 재료상세 리스트 및 no 조회하는 sql -->
	<select id="selectIngreDetail" parameterType="string" resultType="kr.co.foody.recipe.IngredientVO">
		SELECT * FROM ingre WHERE name = #{keyword};
	</select>
	
	<!-- 재료 분류로 재료명 리스트 조회하는 sql -->
	<select id="selectIngreNameList" parameterType="int" resultType="string">
		SELECT distinct name FROM ingre
		WHERE large_cate = #{no}
		ORDER BY name
	</select>
	
	<!-- 재료 검색어로 재료명 리스트 조회하는 sql -->
	<select id='selectIngreNameList2' parameterType="string" resultType="string">
		SELECT DISTINCT name FROM ingre
		WHERE name LIKE '%${keyword}%'
			OR detail LIKE '%${keyword}%'
	</select>
	
	<!-- 랜덤 회원정보 인서트 -->
	<insert id="insertRandomUser" parameterType="map">
		insert into user(email, nik_name, name, birth, tel, pwd, intro, height, weight)
		values (#{email}, #{nik_name}, #{name}, #{birth}, #{tel}, #{pwd}, #{intro}, #{height}, #{weight})
	</insert>
	
	<!-- 랜덤 회원 알러지 인서트 -->
	<insert id="insertAllergyUser" parameterType="map">
		insert into prefer(user_no, prefer_food)
		values (#{userNo}, #{preferFood})
	</insert>
	
	<!-- 랜덤 별점/찜 인서트 -->
	<insert id="insertFeedback" parameterType="map">
		insert into feedback(recipe_no, user_no, star, bookmark)
		values (#{rcpNo}, #{userNo}, #{star}, #{bmk})
	</insert>
	
</mapper>