<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.foody.comment.CommentMapper">

	<!-- 댓글 등록 -->
	<insert id="insert" parameterType="kr.co.foody.comment.CommentVO">
		insert into comment (
			user_no, board_no, regdate, tablename, photo, content
		) values (
			#{user_no}, #{board_no}, now(), #{tablename}, #{photo}, #{content}
		)
		<selectKey keyProperty="no" resultType="int" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<!-- 별점 등록 -->
	<insert id="getStar" parameterType="kr.co.foody.comment.CommentVO">
		insert into feedback (
			user_no, recipe_no, star
		) values (
			#{user_no}, #{recipe_no}, #{star}
		)
	</insert>
	
	<!-- 새로운 별점 등록시 평균별점 업뎃 -->
	<update id="updateAvgstar" parameterType="int">
		update recipe set
		avgStar = (select avg(star) from feedback where recipe_no=#{recipe_no} and star != -1)
		where no=#{recipe_no}
	</update>
	
	<!-- 대댓글 등록 -->
	<insert id="insert_reCmt" parameterType="kr.co.foody.comment.CommentVO">
		insert into comment (
			user_no, board_no, regdate, tablename, photo, content, gno, ono, depth
		) values (
			#{user_no}, #{board_no}, now(), #{tablename}, #{photo}, #{content}, #{gno}, #{ono}, #{depth}
		)
	</insert>
	
	<update id="gnoUpdate" parameterType="int">
		update comment set gno=#{gno} where no=#{gno}
	</update>
	
	<update id="onoUpdate" parameterType="kr.co.foody.comment.CommentVO">
		update comment set ono=ono+1 where gno=#{gno} and ono>#{ono}
	</update>
	
	<!-- 해당 글에 달린 댓글개수 조회 -->
	<select id="count" parameterType="kr.co.foody.comment.CommentVO" resultType="int">
		select count(*) from comment
		where board_no = #{board_no} and tablename = #{tablename}
	</select>
	
	<!-- 해당 글에 달린 댓글목록 조회 -->
	<select id="list" parameterType="kr.co.foody.comment.CommentVO" resultType="kr.co.foody.comment.CommentVO">
		select *,
			(select nik_name from user where no=comment.user_no) as user_nik_name
		from comment
		where board_no = #{board_no} and tablename = #{tablename}
		order by gno desc, ono asc, regdate desc
		limit ${startIdx}, ${pageRow}
	</select>
	
	<!-- 포토 리뷰 -->
	<select id="selectPhotoReview" parameterType="int" resultType="kr.co.foody.comment.CommentVO">
		select * from recipe.comment where board_no = #{no} and photo is not null
	</select>
	
	<!-- 사용자가 댓글 삭제시 print 컬럼 업뎃 -->
	<update id="printUpdate" parameterType="int">
		update recipe.comment set print=1 where no = #{no}
	</update>
	
	
	<!-- 관리자: 댓글 관리 -->
	<!-- 관리자 전체 댓글개수 조회 -->
	<select id="wholeCount" parameterType="kr.co.foody.comment.CommentVO" resultType="int">
		select count(*) from comment
		<where>
			<if test="period != 'all' and period != null and period != ''">
				regdate >= date_add(now(), interval -${period})
			</if>
			<if test="stype != null and stype != ''">
				<if test="stype == 'title' or stype == 'content'">
					and ${stype} like '%${sword}%'
				</if>
				<if test="stype == 'all'">
					and title like '%${sword}%' or content like '%${sword}%'
				</if>
				<if test="stype == 'writer'">
					and user_no in (select no from user where name like '%${sword}%') 
				</if>
			</if>
		</where>
	</select>
	
	<!-- 관리자 전체 댓글목록 조회 -->
	<select id="wholeList" parameterType="kr.co.foody.comment.CommentVO" resultType="kr.co.foody.comment.CommentVO">
		select *,
			(select title from board where no = comment.board_no and tablename = 'board') as board_title,
 			(select name from recipe where no = comment.board_no and tablename = 'recipe') as recipe_name,
 			(select name from user where no=comment.user_no) as user_name
		from comment
		<where>  
			<if test="period != 'all' and period != null and period != ''">
				regdate >= date_add(now(), interval -${period})
			</if>
			<if test="stype != null and stype != ''">
				<if test="stype == 'content'">
					and ${stype} like '%${sword}%'
				</if>
				<if test="stype == 'writer'">
					and user_no in (select no from user where name like '%${sword}%')
				</if>
			</if>
		</where>
		<if test="align == 'recent'">
			order by regdate desc
		</if>
		<if test="align == 'old'">
			order by regdate asc
		</if>
		<if test="align == 'writer'">
			order by user_name
		</if>
		limit ${startIdx}, ${pageRow}
	</select>
	
	<!-- 관리자가 댓글 DB에서 삭제 -->
	<delete id="delete" parameterType="int">
		delete from comment where no=#{no}
	</delete>
	
	
	<!-- 추후 예정 -->
	<!-- 댓글 수정 추후 -->
	<update id="update" parameterType="kr.co.foody.comment.CommentVO">
		update comment set
			content = #{content}, updatedate = #{updatedate}
			<if test="photo != null">
				, photo = #{photo}
			</if>
		where no = #{no}
	</update>

</mapper>